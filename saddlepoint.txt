找出一个2*6的二维数组中的鞍点，即该位置上的元素是该行上的最大值，是该列上的最小值。二维数组也可能没有鞍点。 

**输入提示信息：无

**输入格式要求：%d

**输出格式要求：若存在鞍点，则输出格式用"%d\n"，若没有鞍点，则输出"no saddle point\n"

程序运行示例1：

11 2 66 4 7 6

54 4 6 7 77 4

no saddle point

程序运行示例2：

3 6 3 7 3 5

11 23 23 33 11 21

7

#include <stdio.h>
int main()
{
	int i,j;
	int m,n;
	int pos1,pos2;
	int flag1=0;
	int flag2=0;
	int a[2][6];
	for(i=0;i<2;i++){
		for(j=0;j<6;j++){
			scanf("%d",&a[i][j]);
		}
	}
	pos1=a[0][0];
	for(i=0,j=0;j<6;j++){
		if(a[0][j]>pos1) {
		pos1=a[0][j];
		m=j;}
	    else {
		
		m=0;
		}
		
	}
	if(pos1<a[1][m]) printf("%d",pos1);
	else flag1=1;
	pos2=a[1][0];
	for(i=1,j=0;j<6;j++){
		if(a[1][j]>pos2) {
			pos2=a[1][j];
		n=j;
		}
	
		else{
		
		n=0;
		}
	}
	if(pos2<a[1][n]) printf("%d",pos2);
	else flag2=1;
	
	if(flag1==1&&flag2==1) printf("no saddle point\n");
	return 0;
}